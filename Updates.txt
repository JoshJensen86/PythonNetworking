import winrm
import paramiko
import yaml

# Define your inventory with the correct IP addresses
inventory = {
    'workstations': {
        'workstation1': {'ip': '10.10.1.35', 'type': 'Windows'},
        'workstation2': {'ip': '10.10.1.36', 'type': 'Windows'},
        'workstation3': {'ip': '10.10.1.43', 'type': 'Windows'},
        'workstation4': {'ip': '10.10.1.29', 'type': 'Windows'},
        'workstation5': {'ip': '10.10.1.56', 'type': 'Ubuntu'},
        'workstation6': {'ip': '10.10.1.57', 'type': 'Ubuntu'},
        'workstation7': {'ip': '10.10.1.28', 'type': 'Windows'},
        'workstation8': {'ip': '10.10.1.3', 'type': 'Linux'},
    }
}

# Function to gather Windows information
def gather_windows_info(ip):
    session = winrm.Session(ip, auth=('student', 'P@ssw0rd'))
    result = session.run_cmd('systeminfo')
    return result.std_out.decode()

# Function to gather Linux information
def gather_linux_info(ip):
    client = paramiko.SSHClient()
    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    client.connect(ip, username='student', password='P@ssw0rd')
    stdin, stdout, stderr = client.exec_command('uname -a')
    return stdout.read().decode()

# Main execution
for workstation, details in inventory['workstations'].items():
    ip = details['ip']
    machine_type = details['type']
    
    try:
        if machine_type == 'Windows':
            print(f"Gathering information from {workstation} (Windows) at {ip}...")
            info = gather_windows_info(ip)
            print(info)
        elif machine_type in ['Ubuntu', 'Linux']:
            print(f"Gathering information from {workstation} (Linux) at {ip}...")
            info = gather_linux_info(ip)
            print(info)
    except Exception as e:
        print(f"Failed to connect to {workstation} at {ip}: {e}")
